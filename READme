# ðŸ“˜ TypeScript Key Concepts

This document outlines the most important TypeScript features that go beyond plain JavaScript. Use it as a reference when learning or working with TypeScript.

---

## âœ… Concepts & Descriptions

|------------------------------------------------------------------------------------------------------------|
| **Concept**               | **Description**                                                                |
|---------------------------|--------------------------------------------------------------------------------|
| **Static Typing**         | Assign types to variables, function parameters, and return values to catch errors at compile time. |
| **Interfaces & Types**    | Define custom shapes for objects, functions, and other structures.             |
| **Enums**                 | Define a set of named constants. Useful for managing fixed values.             |
| **Generics**              | Write reusable components and functions that work with multiple types.         |
| **Type Inference**        | TypeScript can guess the type even if you don't explicitly declare it.         |
| **Union & Intersection Types** | Combine or restrict types using `|` (union) or `&` (intersection).        |
| **Tuples**                | Arrays with fixed length and known types at specific positions.                |
| **Strict Null Checks**    | Prevents `null` or `undefined` errors by enabling strict type checking. (`strictNullChecks`) |
| **Type Assertions**       | Tell TypeScript what type you expect using `as Type` syntax.                   |
|------------------------------------------------------------------------------------------------------------|

---

## ðŸš€ Get Started

Follow these steps to run your TypeScript code and see the output in the terminal:

### 1. Install TypeScript and Initialize the Project

```bash
npm install -g typescript
npm init -y
npm install --save-dev typescript ts-node @types/node
npx tsc --init